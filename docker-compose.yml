version: "3"

networks:
  consumer-network:
  kafka-cluster:
    name: kafka-cluster
    driver: bridge

services:
  zookeeper:
    image: bitnami/zookeeper:3.6.2
    container_name: zookeeper
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-cluster

  kafka1:
    image: bitnami/kafka:2.7.0
    container_name: kafka1
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    ports:
      - '9093:9093'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS= 36000
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka1:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
#      - KAFKA_CREATE_TOPICS= "india:1:1,egypt:1:1,singapore:1:1"
    depends_on:
      - zookeeper
    networks:
      - kafka-cluster

  kafka2:
    image: bitnami/kafka:2.7.0
    container_name: kafka2
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS= 36000
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka2:9092,EXTERNAL://localhost:9094
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
#      - KAFKA_CREATE_TOPICS= "india:1:1,egypt:1:1,singapore:1:1"
    depends_on:
      - zookeeper
    networks:
      - kafka-cluster

  kafka3:
    image: bitnami/kafka:2.7.0
    container_name: kafka3
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    ports:
      - '9095:9095'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS= 36000
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka3:9092,EXTERNAL://localhost:9095
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
#      - KAFKA_CREATE_TOPICS= "india:1:1,egypt:1:1,singapore:1:1"
    depends_on:
      - zookeeper
    networks:
      - kafka-cluster

  producer-india:
    image: india.jar
    build:
      context: ./
      dockerfile: DockerfileIndia
    container_name: producer-india
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - SERVER_PORT = 8050
    ports:
      - "8050:8050"
    networks:
      - kafka-cluster

  producer-egypt:
    image: egypt.jar
    build:
      context: ./
      dockerfile: DockerfileEgypt
    container_name: producer-egypt
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - SERVER_PORT = 8060
    ports:
      - "8060:8060"
    networks:
      - kafka-cluster

  producer-singapore:
    image: singapore.jar
    build:
      context: ./
      dockerfile: DockerfileSingapore
    container_name: producer-singapore
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - SERVER_PORT = 8070
    ports:
      - "8070:8070"
    networks:
      - kafka-cluster

  consumer-1:
    image: consumer1.jar
    build:
      context: ./
      dockerfile: Dockerfile1
    container_name: consumer-1
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - SERVER_PORT = 8080
      - CONSUMER_GROUP = group_1
    ports:
      - "8080:8080"
    networks:
      - kafka-cluster

  consumer-2:
    image: consumer2.jar
    build:
      context: ./
      dockerfile: Dockerfile2
    container_name: consumer-2
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - SERVER_PORT = 8081
      - CONSUMER_GROUP = group_2
    ports:
      - "8081:8081"
    networks:
      - kafka-cluster

  consumer-3:
    image: consumer3.jar
    build:
      context: ./
      dockerfile: Dockerfile3
    container_name: consumer-3
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - SERVER_PORT = 8082
      - CONSUMER_GROUP = group_3
    ports:
      - "8082:8082"
    networks:
      - kafka-cluster

  consumer-4:
    image: consumer4.jar
    build:
      context: ./
      dockerfile: Dockerfile4
    container_name: consumer-4
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - SERVER_PORT = 8083
      - CONSUMER_GROUP = group_4
    ports:
      - "8083:8083"
    networks:
      - kafka-cluster

  consumer-5:
    image: consumer5.jar
    build:
     context: ./
     dockerfile: Dockerfile5
    container_name: consumer-5
    deploy:
     resources:
       limits:
         cpus: '0.50'
         memory: 512M
       reservations:
         cpus: '0.25'
         memory: 128M
    environment:
     - SERVER_PORT = 8084
     - CONSUMER_GROUP = group_5
    ports:
     - "8084:8084"
    networks:
     - kafka-cluster

  consumer-6:
    image: consumer6.jar
    build:
      context: ./
      dockerfile: Dockerfile6
    container_name: consumer-6
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - SERVER_PORT = 8085
      - CONSUMER_GROUP = group_6
    ports:
      - "8085:8085"
    networks:
      - kafka-cluster

  consumer-7:
    image: consumer7.jar
    build:
      context: ./
      dockerfile: Dockerfile7
    container_name: consumer-7
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - SERVER_PORT = 8086
      - CONSUMER_GROUP = group_7
    ports:
      - "8086:8086"
    networks:
      - kafka-cluster

  consumer-8:
    image: consumer8.jar
    build:
      context: ./
      dockerfile: Dockerfile8
    container_name: consumer-8
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - SERVER_PORT = 8087
      - CONSUMER_GROUP = group_8
    ports:
      - "8087:8087"
    networks:
      - kafka-cluster

  consumer-9:
    image: consumer9.jar
    build:
      context: ./
      dockerfile: Dockerfile9
    container_name: consumer-9
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - SERVER_PORT = 8088
      - CONSUMER_GROUP = group_9
    ports:
      - "8088:8088"
    networks:
      - kafka-cluster

  consumer-10:
    image: consumer10.jar
    build:
      context: ./
      dockerfile: Dockerfile10
    container_name: consumer-10
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - SERVER_PORT = 8089
      - CONSUMER_GROUP = group_10
    ports:
      - "8089:8089"
    networks:
      - kafka-cluster